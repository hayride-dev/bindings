// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package spawn represents the imported interface "hayride:morph/spawn@0.0.7".
package spawn

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
	ioerror "github.com/hayride-dev/bindings/go/morph/gen/wasi/io/error"
	"github.com/hayride-dev/bindings/go/morph/gen/wasi/io/streams"
)

// Writer represents the imported resource "hayride:morph/spawn@0.0.7#writer".
//
//	resource writer
type Writer cm.Resource

// ResourceDrop represents the imported resource-drop for resource "writer".
//
// Drops a resource handle.
//
//go:nosplit
func (self Writer) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_WriterResourceDrop((uint32)(self0))
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [resource-drop]writer
//go:noescape
func wasmimport_WriterResourceDrop(self0 uint32)

// NewWriter represents the imported constructor for resource "writer".
//
//	constructor()
//
//go:nosplit
func NewWriter() (result Writer) {
	result0 := wasmimport_NewWriter()
	result = cm.Reinterpret[Writer]((uint32)(result0))
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [constructor]writer
//go:noescape
func wasmimport_NewWriter() (result0 uint32)

// Stream represents the imported method "stream".
//
//	%stream: func() -> result<output-stream, error>
//
//go:nosplit
func (self Writer) Stream() (result cm.Result[streams.OutputStream, streams.OutputStream, ioerror.Error]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_WriterStream((uint32)(self0), &result)
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [method]writer.stream
//go:noescape
func wasmimport_WriterStream(self0 uint32, result *cm.Result[streams.OutputStream, streams.OutputStream, ioerror.Error])

// Reader represents the imported resource "hayride:morph/spawn@0.0.7#reader".
//
//	resource reader
type Reader cm.Resource

// ResourceDrop represents the imported resource-drop for resource "reader".
//
// Drops a resource handle.
//
//go:nosplit
func (self Reader) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ReaderResourceDrop((uint32)(self0))
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [resource-drop]reader
//go:noescape
func wasmimport_ReaderResourceDrop(self0 uint32)

// NewReader represents the imported constructor for resource "reader".
//
//	constructor()
//
//go:nosplit
func NewReader() (result Reader) {
	result0 := wasmimport_NewReader()
	result = cm.Reinterpret[Reader]((uint32)(result0))
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [constructor]reader
//go:noescape
func wasmimport_NewReader() (result0 uint32)

// Stream represents the imported method "stream".
//
//	%stream: func() -> result<input-stream, error>
//
//go:nosplit
func (self Reader) Stream() (result cm.Result[streams.InputStream, streams.InputStream, ioerror.Error]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ReaderStream((uint32)(self0), &result)
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 [method]reader.stream
//go:noescape
func wasmimport_ReaderStream(self0 uint32, result *cm.Result[streams.InputStream, streams.InputStream, ioerror.Error])

// Exec represents the imported function "exec".
//
//	exec: func(name: string, args: list<string>) -> result<string, error>
//
//go:nosplit
func Exec(name string, args cm.List[string]) (result cm.Result[string, string, ioerror.Error]) {
	name0, name1 := cm.LowerString(name)
	args0, args1 := cm.LowerList(args)
	wasmimport_Exec((*uint8)(name0), (uint32)(name1), (*string)(args0), (uint32)(args1), &result)
	return
}

//go:wasmimport hayride:morph/spawn@0.0.7 exec
//go:noescape
func wasmimport_Exec(name0 *uint8, name1 uint32, args0 *string, args1 uint32, result *cm.Result[string, string, ioerror.Error])
