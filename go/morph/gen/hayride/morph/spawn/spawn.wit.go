// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package spawn represents the imported interface "hayride:morph/spawn@0.0.4".
package spawn

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
	ioerror "github.com/hayride-dev/bindings/go/morph/gen/wasi/io/error"
	"github.com/hayride-dev/bindings/go/morph/gen/wasi/io/streams"
)

// Exec represents the imported function "exec".
//
//	exec: func(name: string, args: output-stream) -> result<input-stream, error>
//
//go:nosplit
func Exec(name string, args streams.OutputStream) (result cm.Result[streams.InputStream, streams.InputStream, ioerror.Error]) {
	name0, name1 := cm.LowerString(name)
	args0 := cm.Reinterpret[uint32](args)
	wasmimport_Exec((*uint8)(name0), (uint32)(name1), (uint32)(args0), &result)
	return
}

//go:wasmimport hayride:morph/spawn@0.0.4 exec
//go:noescape
func wasmimport_Exec(name0 *uint8, name1 uint32, args0 uint32, result *cm.Result[streams.InputStream, streams.InputStream, ioerror.Error])
