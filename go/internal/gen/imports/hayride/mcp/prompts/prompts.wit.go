// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package prompts represents the imported interface "hayride:mcp/prompts@0.0.64".
package prompts

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/mcp/types"
	"go.bytecodealliance.org/cm"
)

// GetPromptParams represents the type alias "hayride:mcp/prompts@0.0.64#get-prompt-params".
//
// See [types.GetPromptParams] for more information.
type GetPromptParams = types.GetPromptParams

// GetPromptResult represents the type alias "hayride:mcp/prompts@0.0.64#get-prompt-result".
//
// See [types.GetPromptResult] for more information.
type GetPromptResult = types.GetPromptResult

// ListPromptsResult represents the type alias "hayride:mcp/prompts@0.0.64#list-prompts-result".
//
// See [types.ListPromptsResult] for more information.
type ListPromptsResult = types.ListPromptsResult

// ErrorCode represents the enum "hayride:mcp/prompts@0.0.64#error-code".
//
//	enum error-code {
//		prompt-list-failed,
//		prompt-not-found,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodePromptListFailed ErrorCode = iota
	ErrorCodePromptNotFound
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [3]string{
	"prompt-list-failed",
	"prompt-not-found",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])

// Error represents the imported resource "hayride:mcp/prompts@0.0.64#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Prompts represents the imported resource "hayride:mcp/prompts@0.0.64#prompts".
//
//	resource prompts
type Prompts cm.Resource

// ResourceDrop represents the imported resource-drop for resource "prompts".
//
// Drops a resource handle.
//
//go:nosplit
func (self Prompts) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PromptsResourceDrop((uint32)(self0))
	return
}

// NewPrompts represents the imported constructor for resource "prompts".
//
//	constructor()
//
//go:nosplit
func NewPrompts() (result Prompts) {
	result0 := wasmimport_NewPrompts()
	result = cm.Reinterpret[Prompts]((uint32)(result0))
	return
}

// GetPrompt represents the imported method "get-prompt".
//
//	get-prompt: func(params: get-prompt-params) -> result<get-prompt-result, error>
//
//go:nosplit
func (self Prompts) GetPrompt(params GetPromptParams) (result cm.Result[GetPromptResultShape, GetPromptResult, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	params0, params1, params2, params3 := lower_GetPromptParams(params)
	wasmimport_PromptsGetPrompt((uint32)(self0), (*uint8)(params0), (uint32)(params1), (*[2]string)(params2), (uint32)(params3), &result)
	return
}

// ListPrompts represents the imported method "list-prompts".
//
//	list-prompts: func(cursor: string) -> result<list-prompts-result, error>
//
//go:nosplit
func (self Prompts) ListPrompts(cursor string) (result cm.Result[ListPromptsResultShape, ListPromptsResult, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	cursor0, cursor1 := cm.LowerString(cursor)
	wasmimport_PromptsListPrompts((uint32)(self0), (*uint8)(cursor0), (uint32)(cursor1), &result)
	return
}
