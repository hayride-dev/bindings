// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package resources represents the imported interface "hayride:mcp/resources@0.0.64".
package resources

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/mcp/types"
	"go.bytecodealliance.org/cm"
)

// ReadResourceParams represents the type alias "hayride:mcp/resources@0.0.64#read-resource-params".
//
// See [types.ReadResourceParams] for more information.
type ReadResourceParams = types.ReadResourceParams

// ReadResourceResult represents the type alias "hayride:mcp/resources@0.0.64#read-resource-result".
//
// See [types.ReadResourceResult] for more information.
type ReadResourceResult = types.ReadResourceResult

// ListResourcesResult represents the type alias "hayride:mcp/resources@0.0.64#list-resources-result".
//
// See [types.ListResourcesResult] for more information.
type ListResourcesResult = types.ListResourcesResult

// ListResourceTemplatesResult represents the type alias "hayride:mcp/resources@0.0.64#list-resource-templates-result".
//
// See [types.ListResourceTemplatesResult] for more information.
type ListResourceTemplatesResult = types.ListResourceTemplatesResult

// ErrorCode represents the enum "hayride:mcp/resources@0.0.64#error-code".
//
//	enum error-code {
//		resource-list-failed,
//		resource-not-found,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeResourceListFailed ErrorCode = iota
	ErrorCodeResourceNotFound
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [3]string{
	"resource-list-failed",
	"resource-not-found",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])

// Error represents the imported resource "hayride:mcp/resources@0.0.64#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Resources represents the imported resource "hayride:mcp/resources@0.0.64#resources".
//
//	resource resources
type Resources cm.Resource

// ResourceDrop represents the imported resource-drop for resource "resources".
//
// Drops a resource handle.
//
//go:nosplit
func (self Resources) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ResourcesResourceDrop((uint32)(self0))
	return
}

// NewResources represents the imported constructor for resource "resources".
//
//	constructor()
//
//go:nosplit
func NewResources() (result Resources) {
	result0 := wasmimport_NewResources()
	result = cm.Reinterpret[Resources]((uint32)(result0))
	return
}

// ListResources represents the imported method "list-resources".
//
//	list-resources: func(cursor: string) -> result<list-resources-result, error>
//
//go:nosplit
func (self Resources) ListResources(cursor string) (result cm.Result[ListResourcesResultShape, ListResourcesResult, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	cursor0, cursor1 := cm.LowerString(cursor)
	wasmimport_ResourcesListResources((uint32)(self0), (*uint8)(cursor0), (uint32)(cursor1), &result)
	return
}

// ListTemplates represents the imported method "list-templates".
//
//	list-templates: func(cursor: string) -> result<list-resource-templates-result,
//	error>
//
//go:nosplit
func (self Resources) ListTemplates(cursor string) (result cm.Result[ListResourceTemplatesResultShape, ListResourceTemplatesResult, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	cursor0, cursor1 := cm.LowerString(cursor)
	wasmimport_ResourcesListTemplates((uint32)(self0), (*uint8)(cursor0), (uint32)(cursor1), &result)
	return
}

// ReadResources represents the imported method "read-resources".
//
//	read-resources: func(params: read-resource-params) -> result<read-resource-result,
//	error>
//
//go:nosplit
func (self Resources) ReadResources(params ReadResourceParams) (result cm.Result[ReadResourceResultShape, ReadResourceResult, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	params0, params1 := lower_ReadResourceParams(params)
	wasmimport_ResourcesReadResources((uint32)(self0), (*uint8)(params0), (uint32)(params1), &result)
	return
}
