// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package types represents the imported interface "hayride:wac/types@0.0.59".
package types

import (
	"go.bytecodealliance.org/cm"
)

// ErrorCode represents the enum "hayride:wac/types@0.0.59#error-code".
//
//	enum error-code {
//		file-not-found,
//		resolve-failed,
//		compose-failed,
//		encode-failed,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeFileNotFound ErrorCode = iota
	ErrorCodeResolveFailed
	ErrorCodeComposeFailed
	ErrorCodeEncodeFailed
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [5]string{
	"file-not-found",
	"resolve-failed",
	"compose-failed",
	"encode-failed",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])
