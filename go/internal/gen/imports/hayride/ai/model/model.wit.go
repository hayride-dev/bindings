// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package model represents the imported interface "hayride:ai/model@0.0.37".
package model

import (
	inferencestream "github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/inference-stream"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/types"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/wasi/io/streams"
	"go.bytecodealliance.org/cm"
)

// Message represents the type alias "hayride:ai/model@0.0.37#message".
//
// See [types.Message] for more information.
type Message = types.Message

// GraphExecutionContextStream represents the imported type alias "hayride:ai/model@0.0.37#graph-execution-context-stream".
//
// See [inferencestream.GraphExecutionContextStream] for more information.
type GraphExecutionContextStream = inferencestream.GraphExecutionContextStream

// OutputStream represents the imported type alias "hayride:ai/model@0.0.37#output-stream".
//
// See [streams.OutputStream] for more information.
type OutputStream = streams.OutputStream

// ErrorCode represents the enum "hayride:ai/model@0.0.37#error-code".
//
//	enum error-code {
//		context-encode,
//		message-decode,
//		compute-error,
//		unexpected-message-type,
//		format-error,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeContextEncode ErrorCode = iota
	ErrorCodeMessageDecode
	ErrorCodeComputeError
	ErrorCodeUnexpectedMessageType
	ErrorCodeFormatError
	ErrorCodeUnknown
)

var stringsErrorCode = [6]string{
	"context-encode",
	"message-decode",
	"compute-error",
	"unexpected-message-type",
	"format-error",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return stringsErrorCode[e]
}

// Error represents the imported resource "hayride:ai/model@0.0.37#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Model represents the imported resource "hayride:ai/model@0.0.37#model".
//
//	resource model
type Model cm.Resource

// ResourceDrop represents the imported resource-drop for resource "model".
//
// Drops a resource handle.
//
//go:nosplit
func (self Model) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ModelResourceDrop((uint32)(self0))
	return
}

// NewModel represents the imported constructor for resource "model".
//
//	constructor(graph: graph-execution-context-stream)
//
//go:nosplit
func NewModel(graph GraphExecutionContextStream) (result Model) {
	graph0 := cm.Reinterpret[uint32](graph)
	result0 := wasmimport_NewModel((uint32)(graph0))
	result = cm.Reinterpret[Model]((uint32)(result0))
	return
}

// Compute represents the imported method "compute".
//
//	compute: func(output: borrow<output-stream>) -> result<message, error>
//
//go:nosplit
func (self Model) Compute(output OutputStream) (result cm.Result[MessageShape, Message, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	output0 := cm.Reinterpret[uint32](output)
	wasmimport_ModelCompute((uint32)(self0), (uint32)(output0), &result)
	return
}

// Push represents the imported method "push".
//
//	push: func(messages: list<message>) -> result<_, error>
//
//go:nosplit
func (self Model) Push(messages cm.List[Message]) (result cm.Result[Error, struct{}, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	messages0, messages1 := cm.LowerList(messages)
	wasmimport_ModelPush((uint32)(self0), (*Message)(messages0), (uint32)(messages1), &result)
	return
}
