// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package agent represents the imported interface "hayride:ai/agent@0.0.38".
package agent

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/model"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/types"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/wasi/io/streams"
	"go.bytecodealliance.org/cm"
)

// OutputStream represents the imported type alias "hayride:ai/agent@0.0.38#output-stream".
//
// See [streams.OutputStream] for more information.
type OutputStream = streams.OutputStream

// Message represents the type alias "hayride:ai/agent@0.0.38#message".
//
// See [model.Message] for more information.
type Message = model.Message

// ErrorCode represents the enum "hayride:ai/agent@0.0.38#error-code".
//
//	enum error-code {
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeUnknown ErrorCode = iota
)

var stringsErrorCode = [1]string{
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return stringsErrorCode[e]
}

// Error represents the imported resource "hayride:ai/agent@0.0.38#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Invoke represents the imported function "invoke".
//
//	invoke: func(msg: message, output: output-stream) -> result<_, error>
//
//go:nosplit
func Invoke(msg Message, output OutputStream) (result cm.Result[Error, struct{}, Error]) {
	msg0, msg1, msg2 := lower_Message(msg)
	output0 := cm.Reinterpret[uint32](output)
	wasmimport_Invoke((uint32)(msg0), (*types.Content)(msg1), (uint32)(msg2), (uint32)(output0), &result)
	return
}
