// Code generated by wit-bindgen-go. DO NOT EDIT.

package agents

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/types"
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "hayride:ai@0.0.65".

//go:wasmimport hayride:ai/agents@0.0.65 [resource-drop]error
//go:noescape
func wasmimport_ErrorResourceDrop(self0 uint32)

//go:wasmimport hayride:ai/agents@0.0.65 [method]error.code
//go:noescape
func wasmimport_ErrorCode(self0 uint32) (result0 uint32)

//go:wasmimport hayride:ai/agents@0.0.65 [method]error.data
//go:noescape
func wasmimport_ErrorData(self0 uint32, result *string)

//go:wasmimport hayride:ai/agents@0.0.65 [resource-drop]agent
//go:noescape
func wasmimport_AgentResourceDrop(self0 uint32)

//go:wasmimport hayride:ai/agents@0.0.65 [constructor]agent
//go:noescape
func wasmimport_NewAgent(name0 *uint8, name1 uint32, instruction0 *uint8, instruction1 uint32, tools0 uint32, tools1 uint32, context0 uint32, context1 uint32) (result0 uint32)

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.capabilities
//go:noescape
func wasmimport_AgentCapabilities(self0 uint32, result *cm.Result[cm.List[Tool], cm.List[Tool], Error])

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.context
//go:noescape
func wasmimport_AgentContext(self0 uint32, result *cm.Result[cm.List[Message], cm.List[Message], Error])

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.execute
//go:noescape
func wasmimport_AgentExecute(self0 uint32, params0 *uint8, params1 uint32, params2 *[2]string, params3 uint32, result *cm.Result[CallToolResultShape, CallToolResult, Error])

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.instruction
//go:noescape
func wasmimport_AgentInstruction(self0 uint32, result *string)

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.name
//go:noescape
func wasmimport_AgentName(self0 uint32, result *string)

//go:wasmimport hayride:ai/agents@0.0.65 [method]agent.push
//go:noescape
func wasmimport_AgentPush(self0 uint32, msg0 uint32, msg1 *types.MessageContent, msg2 uint32, msg3 uint32, result *cm.Result[Error, struct{}, Error])
