// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package agents represents the imported interface "hayride:ai/agents@0.0.61".
package agents

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/context"
	graphstream "github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/graph-stream"
	inferencestream "github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/inference-stream"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/model"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/types"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/mcp/tools"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/wasi/io/streams"
	"go.bytecodealliance.org/cm"
)

// Message represents the type alias "hayride:ai/agents@0.0.61#message".
//
// See [types.Message] for more information.
type Message = types.Message

// Context represents the imported type alias "hayride:ai/agents@0.0.61#context".
//
// See [context.Context] for more information.
type Context = context.Context

// Format represents the imported type alias "hayride:ai/agents@0.0.61#format".
//
// See [model.Format] for more information.
type Format = model.Format

// Tools represents the imported type alias "hayride:ai/agents@0.0.61#tools".
//
// See [tools.Tools] for more information.
type Tools = tools.Tools

// Tool represents the type alias "hayride:ai/agents@0.0.61#tool".
//
// See [tools.Tool] for more information.
type Tool = tools.Tool

// GraphStream represents the imported type alias "hayride:ai/agents@0.0.61#graph-stream".
//
// See [graphstream.GraphStream] for more information.
type GraphStream = graphstream.GraphStream

// GraphExecutionContextStream represents the imported type alias "hayride:ai/agents@0.0.61#graph-execution-context-stream".
//
// See [inferencestream.GraphExecutionContextStream] for more information.
type GraphExecutionContextStream = inferencestream.GraphExecutionContextStream

// OutputStream represents the imported type alias "hayride:ai/agents@0.0.61#output-stream".
//
// See [streams.OutputStream] for more information.
type OutputStream = streams.OutputStream

// ErrorCode represents the enum "hayride:ai/agents@0.0.61#error-code".
//
//	enum error-code {
//		capabilities-error,
//		context-error,
//		compute-error,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeCapabilitiesError ErrorCode = iota
	ErrorCodeContextError
	ErrorCodeComputeError
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [4]string{
	"capabilities-error",
	"context-error",
	"compute-error",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])

// Error represents the imported resource "hayride:ai/agents@0.0.61#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Agent represents the imported resource "hayride:ai/agents@0.0.61#agent".
//
//	resource agent
type Agent cm.Resource

// ResourceDrop represents the imported resource-drop for resource "agent".
//
// Drops a resource handle.
//
//go:nosplit
func (self Agent) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentResourceDrop((uint32)(self0))
	return
}

// NewAgent represents the imported constructor for resource "agent".
//
//	constructor(name: string, instruction: string, tools: tools, context: context,
//	format: format, graph: graph-execution-context-stream)
//
//go:nosplit
func NewAgent(name string, instruction string, tools_ Tools, context_ Context, format Format, graph GraphExecutionContextStream) (result Agent) {
	name0, name1 := cm.LowerString(name)
	instruction0, instruction1 := cm.LowerString(instruction)
	tools0 := cm.Reinterpret[uint32](tools_)
	context0 := cm.Reinterpret[uint32](context_)
	format0 := cm.Reinterpret[uint32](format)
	graph0 := cm.Reinterpret[uint32](graph)
	result0 := wasmimport_NewAgent((*uint8)(name0), (uint32)(name1), (*uint8)(instruction0), (uint32)(instruction1), (uint32)(tools0), (uint32)(context0), (uint32)(format0), (uint32)(graph0))
	result = cm.Reinterpret[Agent]((uint32)(result0))
	return
}

// Capabilities represents the imported method "capabilities".
//
//	capabilities: func() -> result<list<tool>, error>
//
//go:nosplit
func (self Agent) Capabilities() (result cm.Result[cm.List[Tool], cm.List[Tool], Error]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentCapabilities((uint32)(self0), &result)
	return
}

// Compute represents the imported method "compute".
//
//	compute: func(message: message) -> result<message, error>
//
//go:nosplit
func (self Agent) Compute(message Message) (result cm.Result[MessageShape, Message, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	message0, message1, message2 := lower_Message(message)
	wasmimport_AgentCompute((uint32)(self0), (uint32)(message0), (*types.MessageContent)(message1), (uint32)(message2), &result)
	return
}

// Context represents the imported method "context".
//
//	context: func() -> result<list<message>, error>
//
//go:nosplit
func (self Agent) Context() (result cm.Result[cm.List[Message], cm.List[Message], Error]) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentContext((uint32)(self0), &result)
	return
}

// Instruction represents the imported method "instruction".
//
//	instruction: func() -> string
//
//go:nosplit
func (self Agent) Instruction() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentInstruction((uint32)(self0), &result)
	return
}

// Name represents the imported method "name".
//
//	name: func() -> string
//
//go:nosplit
func (self Agent) Name() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentName((uint32)(self0), &result)
	return
}
