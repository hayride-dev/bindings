// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package agents represents the imported interface "hayride:ai/agents@0.0.61".
package agents

import (
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/context"
	graphstream "github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/graph-stream"
	inferencestream "github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/inference-stream"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/ai/model"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/hayride/mcp/tools"
	"github.com/hayride-dev/bindings/go/internal/gen/imports/wasi/io/streams"
	"go.bytecodealliance.org/cm"
)

// Context represents the imported type alias "hayride:ai/agents@0.0.61#context".
//
// See [context.Context] for more information.
type Context = context.Context

// Format represents the imported type alias "hayride:ai/agents@0.0.61#format".
//
// See [model.Format] for more information.
type Format = model.Format

// Tools represents the imported type alias "hayride:ai/agents@0.0.61#tools".
//
// See [tools.Tools] for more information.
type Tools = tools.Tools

// GraphStream represents the imported type alias "hayride:ai/agents@0.0.61#graph-stream".
//
// See [graphstream.GraphStream] for more information.
type GraphStream = graphstream.GraphStream

// GraphExecutionContextStream represents the imported type alias "hayride:ai/agents@0.0.61#graph-execution-context-stream".
//
// See [inferencestream.GraphExecutionContextStream] for more information.
type GraphExecutionContextStream = inferencestream.GraphExecutionContextStream

// OutputStream represents the imported type alias "hayride:ai/agents@0.0.61#output-stream".
//
// See [streams.OutputStream] for more information.
type OutputStream = streams.OutputStream

// Agent represents the imported resource "hayride:ai/agents@0.0.61#agent".
//
//	resource agent
type Agent cm.Resource

// ResourceDrop represents the imported resource-drop for resource "agent".
//
// Drops a resource handle.
//
//go:nosplit
func (self Agent) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentResourceDrop((uint32)(self0))
	return
}

// NewAgent represents the imported constructor for resource "agent".
//
//	constructor(name: string, instruction: string, tools: tools, context: context,
//	format: format, graph: graph-execution-context-stream)
//
//go:nosplit
func NewAgent(name string, instruction string, tools_ Tools, context_ Context, format Format, graph GraphExecutionContextStream) (result Agent) {
	name0, name1 := cm.LowerString(name)
	instruction0, instruction1 := cm.LowerString(instruction)
	tools0 := cm.Reinterpret[uint32](tools_)
	context0 := cm.Reinterpret[uint32](context_)
	format0 := cm.Reinterpret[uint32](format)
	graph0 := cm.Reinterpret[uint32](graph)
	result0 := wasmimport_NewAgent((*uint8)(name0), (uint32)(name1), (*uint8)(instruction0), (uint32)(instruction1), (uint32)(tools0), (uint32)(context0), (uint32)(format0), (uint32)(graph0))
	result = cm.Reinterpret[Agent]((uint32)(result0))
	return
}

// Context represents the imported method "context".
//
//	context: func() -> context
//
//go:nosplit
func (self Agent) Context() (result Context) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_AgentContext((uint32)(self0))
	result = cm.Reinterpret[Context]((uint32)(result0))
	return
}

// Format represents the imported method "format".
//
//	format: func() -> format
//
//go:nosplit
func (self Agent) Format() (result Format) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_AgentFormat((uint32)(self0))
	result = cm.Reinterpret[Format]((uint32)(result0))
	return
}

// Graph represents the imported method "graph".
//
//	graph: func() -> graph-execution-context-stream
//
//go:nosplit
func (self Agent) Graph() (result GraphExecutionContextStream) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_AgentGraph((uint32)(self0))
	result = cm.Reinterpret[GraphExecutionContextStream]((uint32)(result0))
	return
}

// Instruction represents the imported method "instruction".
//
//	instruction: func() -> string
//
//go:nosplit
func (self Agent) Instruction() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentInstruction((uint32)(self0), &result)
	return
}

// Name represents the imported method "name".
//
//	name: func() -> string
//
//go:nosplit
func (self Agent) Name() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentName((uint32)(self0), &result)
	return
}

// Tools represents the imported method "tools".
//
//	tools: func() -> tools
//
//go:nosplit
func (self Agent) Tools() (result Tools) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_AgentTools((uint32)(self0))
	result = cm.Reinterpret[Tools]((uint32)(result0))
	return
}
