// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package transformer represents the imported interface "hayride:ai/transformer@0.0.46".
package transformer

import (
	"go.bytecodealliance.org/cm"
)

// EmbeddingType represents the enum "hayride:ai/transformer@0.0.46#embedding-type".
//
//	enum embedding-type {
//		sentence
//	}
type EmbeddingType uint8

const (
	EmbeddingTypeSentence EmbeddingType = iota
)

var _EmbeddingTypeStrings = [1]string{
	"sentence",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e EmbeddingType) String() string {
	return _EmbeddingTypeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e EmbeddingType) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *EmbeddingType) UnmarshalText(text []byte) error {
	return _EmbeddingTypeUnmarshalCase(e, text)
}

var _EmbeddingTypeUnmarshalCase = cm.CaseUnmarshaler[EmbeddingType](_EmbeddingTypeStrings[:])

// Transformer represents the imported resource "hayride:ai/transformer@0.0.46#transformer".
//
//	resource transformer
type Transformer cm.Resource

// ResourceDrop represents the imported resource-drop for resource "transformer".
//
// Drops a resource handle.
//
//go:nosplit
func (self Transformer) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TransformerResourceDrop((uint32)(self0))
	return
}

// NewTransformer represents the imported constructor for resource "transformer".
//
//	constructor(embedding: embedding-type, model: string, data-column: string, vector-column:
//	string)
//
//go:nosplit
func NewTransformer(embedding EmbeddingType, model string, dataColumn string, vectorColumn string) (result Transformer) {
	embedding0 := (uint32)(embedding)
	model0, model1 := cm.LowerString(model)
	dataColumn0, dataColumn1 := cm.LowerString(dataColumn)
	vectorColumn0, vectorColumn1 := cm.LowerString(vectorColumn)
	result0 := wasmimport_NewTransformer((uint32)(embedding0), (*uint8)(model0), (uint32)(model1), (*uint8)(dataColumn0), (uint32)(dataColumn1), (*uint8)(vectorColumn0), (uint32)(vectorColumn1))
	result = cm.Reinterpret[Transformer]((uint32)(result0))
	return
}

// DataColumn represents the imported method "data-column".
//
//	data-column: func() -> string
//
//go:nosplit
func (self Transformer) DataColumn() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TransformerDataColumn((uint32)(self0), &result)
	return
}

// Embedding represents the imported method "embedding".
//
//	embedding: func() -> embedding-type
//
//go:nosplit
func (self Transformer) Embedding() (result EmbeddingType) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_TransformerEmbedding((uint32)(self0))
	result = (EmbeddingType)((uint32)(result0))
	return
}

// Model represents the imported method "model".
//
//	model: func() -> string
//
//go:nosplit
func (self Transformer) Model() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TransformerModel((uint32)(self0), &result)
	return
}

// VectorColumn represents the imported method "vector-column".
//
//	vector-column: func() -> string
//
//go:nosplit
func (self Transformer) VectorColumn() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TransformerVectorColumn((uint32)(self0), &result)
	return
}
