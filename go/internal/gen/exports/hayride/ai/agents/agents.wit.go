// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package agents represents the exported interface "hayride:ai/agents@0.0.61".
package agents

import (
	"github.com/hayride-dev/bindings/go/internal/gen/exports/hayride/ai/context"
	graphstream "github.com/hayride-dev/bindings/go/internal/gen/exports/hayride/ai/graph-stream"
	inferencestream "github.com/hayride-dev/bindings/go/internal/gen/exports/hayride/ai/inference-stream"
	"github.com/hayride-dev/bindings/go/internal/gen/exports/hayride/ai/model"
	"github.com/hayride-dev/bindings/go/internal/gen/exports/hayride/mcp/tools"
	"github.com/hayride-dev/bindings/go/internal/gen/exports/wasi/io/streams"
	"go.bytecodealliance.org/cm"
)

// Context represents the exported type alias "hayride:ai/agents@0.0.61#context".
//
// See [context.Context] for more information.
type Context = context.Context

// Format represents the exported type alias "hayride:ai/agents@0.0.61#format".
//
// See [model.Format] for more information.
type Format = model.Format

// Tools represents the exported type alias "hayride:ai/agents@0.0.61#tools".
//
// See [tools.Tools] for more information.
type Tools = tools.Tools

// GraphStream represents the exported type alias "hayride:ai/agents@0.0.61#graph-stream".
//
// See [graphstream.GraphStream] for more information.
type GraphStream = graphstream.GraphStream

// GraphExecutionContextStream represents the exported type alias "hayride:ai/agents@0.0.61#graph-execution-context-stream".
//
// See [inferencestream.GraphExecutionContextStream] for more information.
type GraphExecutionContextStream = inferencestream.GraphExecutionContextStream

// OutputStream represents the exported type alias "hayride:ai/agents@0.0.61#output-stream".
//
// See [streams.OutputStream] for more information.
type OutputStream = streams.OutputStream

// Agent represents the exported resource "hayride:ai/agents@0.0.61#agent".
//
//	resource agent
type Agent cm.Resource

// AgentResourceNew represents the imported resource-new for resource "agent".
//
// Creates a new resource handle.
//
//go:nosplit
func AgentResourceNew(rep cm.Rep) (result Agent) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_AgentResourceNew((uint32)(rep0))
	result = cm.Reinterpret[Agent]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "agent".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self Agent) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_AgentResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "agent".
//
// Drops a resource handle.
//
//go:nosplit
func (self Agent) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_AgentResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.Agent.Destructor = func(self cm.Rep) {}
}
