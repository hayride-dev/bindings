// Code generated by wit-bindgen-go. DO NOT EDIT.

package resources

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "hayride:mcp/resources@0.0.64".
var Exports struct {
	// Error represents the caller-defined exports for resource "hayride:mcp/resources@0.0.64#error".
	Error struct {
		// Destructor represents the caller-defined, exported destructor for resource "error".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Code represents the caller-defined, exported method "code".
		//
		// return the error code.
		//
		//	code: func() -> error-code
		Code func(self cm.Rep) (result ErrorCode)

		// Data represents the caller-defined, exported method "data".
		//
		// errors can propagated with backend specific status through a string value.
		//
		//	data: func() -> string
		Data func(self cm.Rep) (result string)
	}

	// Resources represents the caller-defined exports for resource "hayride:mcp/resources@0.0.64#resources".
	Resources struct {
		// Destructor represents the caller-defined, exported destructor for resource "resources".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Constructor represents the caller-defined, exported constructor for resource "resources".
		//
		//	constructor()
		Constructor func() (result Resources)

		// ListResources represents the caller-defined, exported method "list-resources".
		//
		//	list-resources: func(cursor: string) -> result<list-resources-result, error>
		ListResources func(self cm.Rep, cursor string) (result cm.Result[ListResourcesResultShape, ListResourcesResult, Error])

		// ListTemplates represents the caller-defined, exported method "list-templates".
		//
		//	list-templates: func(cursor: string) -> result<list-resource-templates-result,
		//	error>
		ListTemplates func(self cm.Rep, cursor string) (result cm.Result[ListResourceTemplatesResultShape, ListResourceTemplatesResult, Error])

		// ReadResources represents the caller-defined, exported method "read-resources".
		//
		//	read-resources: func(params: read-resource-params) -> result<read-resource-result,
		//	error>
		ReadResources func(self cm.Rep, params ReadResourceParams) (result cm.Result[ReadResourceResultShape, ReadResourceResult, Error])
	}
}
