// Code generated by wit-bindgen-go. DO NOT EDIT.

package auth

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "hayride:mcp@0.0.62".

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-new]error
//go:noescape
func wasmimport_ErrorResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-rep]error
//go:noescape
func wasmimport_ErrorResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-drop]error
//go:noescape
func wasmimport_ErrorResourceDrop(self0 uint32)

//go:wasmexport hayride:mcp/auth@0.0.62#[dtor]error
//export hayride:mcp/auth@0.0.62#[dtor]error
func wasmexport_ErrorDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.Error.Destructor(self)
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]error.code
//export hayride:mcp/auth@0.0.62#[method]error.code
func wasmexport_ErrorCode(self0 uint32) (result0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	result := Exports.Error.Code(self)
	result0 = (uint32)(result)
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]error.data
//export hayride:mcp/auth@0.0.62#[method]error.data
func wasmexport_ErrorData(self0 uint32) (result *string) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	result_ := Exports.Error.Data(self)
	result = &result_
	return
}

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-new]provider
//go:noescape
func wasmimport_ProviderResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-rep]provider
//go:noescape
func wasmimport_ProviderResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]hayride:mcp/auth@0.0.62 [resource-drop]provider
//go:noescape
func wasmimport_ProviderResourceDrop(self0 uint32)

//go:wasmexport hayride:mcp/auth@0.0.62#[dtor]provider
//export hayride:mcp/auth@0.0.62#[dtor]provider
func wasmexport_ProviderDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.Provider.Destructor(self)
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[constructor]provider
//export hayride:mcp/auth@0.0.62#[constructor]provider
func wasmexport_Constructor() (result0 uint32) {
	result := Exports.Provider.Constructor()
	result0 = cm.Reinterpret[uint32](result)
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]provider.auth-url
//export hayride:mcp/auth@0.0.62#[method]provider.auth-url
func wasmexport_ProviderAuthURL(self0 uint32) (result *cm.Result[string, string, Error]) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	result_ := Exports.Provider.AuthURL(self)
	result = &result_
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]provider.exchange-code
//export hayride:mcp/auth@0.0.62#[method]provider.exchange-code
func wasmexport_ProviderExchangeCode(self0 uint32, data0 *uint8, data1 uint32) (result *cm.Result[cm.List[uint8], cm.List[uint8], Error]) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	data := cm.LiftList[cm.List[uint8]]((*uint8)(data0), (uint32)(data1))
	result_ := Exports.Provider.ExchangeCode(self, data)
	result = &result_
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]provider.registration
//export hayride:mcp/auth@0.0.62#[method]provider.registration
func wasmexport_ProviderRegistration(self0 uint32, data0 *uint8, data1 uint32) (result *cm.Result[cm.List[uint8], cm.List[uint8], Error]) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	data := cm.LiftList[cm.List[uint8]]((*uint8)(data0), (uint32)(data1))
	result_ := Exports.Provider.Registration(self, data)
	result = &result_
	return
}

//go:wasmexport hayride:mcp/auth@0.0.62#[method]provider.validate
//export hayride:mcp/auth@0.0.62#[method]provider.validate
func wasmexport_ProviderValidate(self0 uint32, token0 *uint8, token1 uint32) (result *cm.Result[Error, bool, Error]) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	token := cm.LiftString[string]((*uint8)(token0), (uint32)(token1))
	result_ := Exports.Provider.Validate(self, token)
	result = &result_
	return
}
