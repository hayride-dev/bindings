// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package auth represents the exported interface "hayride:mcp/auth@0.0.63".
package auth

import (
	"go.bytecodealliance.org/cm"
)

// ErrorCode represents the enum "hayride:mcp/auth@0.0.63#error-code".
//
//	enum error-code {
//		auth-url-failed,
//		registration-failed,
//		exchange-code-failed,
//		validate-failed,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeAuthURLFailed ErrorCode = iota
	ErrorCodeRegistrationFailed
	ErrorCodeExchangeCodeFailed
	ErrorCodeValidateFailed
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [5]string{
	"auth-url-failed",
	"registration-failed",
	"exchange-code-failed",
	"validate-failed",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])

// Error represents the exported resource "hayride:mcp/auth@0.0.63#error".
//
//	resource error
type Error cm.Resource

// ErrorResourceNew represents the imported resource-new for resource "error".
//
// Creates a new resource handle.
//
//go:nosplit
func ErrorResourceNew(rep cm.Rep) (result Error) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_ErrorResourceNew((uint32)(rep0))
	result = cm.Reinterpret[Error]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "error".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self Error) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.Error.Destructor = func(self cm.Rep) {}
}

// Provider represents the exported resource "hayride:mcp/auth@0.0.63#provider".
//
// provider allows for proxy authentication
//
//	resource provider
type Provider cm.Resource

// ProviderResourceNew represents the imported resource-new for resource "provider".
//
// Creates a new resource handle.
//
//go:nosplit
func ProviderResourceNew(rep cm.Rep) (result Provider) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_ProviderResourceNew((uint32)(rep0))
	result = cm.Reinterpret[Provider]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "provider".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self Provider) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ProviderResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "provider".
//
// Drops a resource handle.
//
//go:nosplit
func (self Provider) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ProviderResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.Provider.Destructor = func(self cm.Rep) {}
}
