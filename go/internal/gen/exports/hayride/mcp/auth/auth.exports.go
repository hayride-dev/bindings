// Code generated by wit-bindgen-go. DO NOT EDIT.

package auth

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "hayride:mcp/auth@0.0.62".
var Exports struct {
	// Error represents the caller-defined exports for resource "hayride:mcp/auth@0.0.62#error".
	Error struct {
		// Destructor represents the caller-defined, exported destructor for resource "error".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Code represents the caller-defined, exported method "code".
		//
		// return the error code.
		//
		//	code: func() -> error-code
		Code func(self cm.Rep) (result ErrorCode)

		// Data represents the caller-defined, exported method "data".
		//
		// errors can propagated with backend specific status through a string value.
		//
		//	data: func() -> string
		Data func(self cm.Rep) (result string)
	}

	// Provider represents the caller-defined exports for resource "hayride:mcp/auth@0.0.62#provider".
	Provider struct {
		// Destructor represents the caller-defined, exported destructor for resource "provider".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Constructor represents the caller-defined, exported constructor for resource "provider".
		//
		// Construct a provider with the given config key/value pairs
		//
		//	constructor()
		Constructor func() (result Provider)

		// AuthURL represents the caller-defined, exported method "auth-url".
		//
		// Return the url to use for authorization
		//
		//	auth-url: func() -> result<string, error>
		AuthURL func(self cm.Rep) (result cm.Result[string, string, Error])

		// ExchangeCode represents the caller-defined, exported method "exchange-code".
		//
		// Exchange code for token, takes the body of the token request and returns auth token
		//
		//	exchange-code: func(data: list<u8>) -> result<list<u8>, error>
		ExchangeCode func(self cm.Rep, data cm.List[uint8]) (result cm.Result[cm.List[uint8], cm.List[uint8], Error])

		// Registration represents the caller-defined, exported method "registration".
		//
		// Dynamic Registration for a new client should use the provided data for a registration
		// request and return client info
		//
		//	registration: func(data: list<u8>) -> result<list<u8>, error>
		Registration func(self cm.Rep, data cm.List[uint8]) (result cm.Result[cm.List[uint8], cm.List[uint8], Error])

		// Validate represents the caller-defined, exported method "validate".
		//
		// Validate the bearer token, returning true if valid
		//
		//	validate: func(token: string) -> result<bool, error>
		Validate func(self cm.Rep, token string) (result cm.Result[Error, bool, Error])
	}
}
