// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package agents represents the imported interface "hayride:ai/agents@0.0.33".
package agents

import (
	"github.com/hayride-dev/bindings/go/ai/gen/imports/hayride/ai/types"
	"go.bytecodealliance.org/cm"
)

// Agent represents the type alias "hayride:ai/agents@0.0.33#agent".
//
// See [types.Agent] for more information.
type Agent = types.Agent

// Tool represents the type alias "hayride:ai/agents@0.0.33#tool".
//
// See [types.Tool] for more information.
type Tool = types.Tool

// ErrorCode represents the enum "hayride:ai/agents@0.0.33#error-code".
//
//	enum error-code {
//		enhance-error,
//		unknown
//	}
type ErrorCode uint8

const (
	// generic Runtime Error.
	ErrorCodeEnhanceError ErrorCode = iota

	// unsupported operation.
	ErrorCodeUnknown
)

var stringsErrorCode = [2]string{
	"enhance-error",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return stringsErrorCode[e]
}

// Error represents the imported resource "hayride:ai/agents@0.0.33#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Set represents the imported function "set".
//
//	set: func(agent: agent) -> result<_, error>
//
//go:nosplit
func Set(agent Agent) (result cm.Result[Error, struct{}, Error]) {
	agent0, agent1, agent2, agent3, agent4, agent5 := lower_Agent(agent)
	wasmimport_Set((*uint8)(agent0), (uint32)(agent1), (*uint8)(agent2), (uint32)(agent3), (*types.Tool)(agent4), (uint32)(agent5), &result)
	return
}

// Get represents the imported function "get".
//
//	get: func(name: string) -> result<agent, error>
//
//go:nosplit
func Get(name string) (result cm.Result[AgentShape, Agent, Error]) {
	name0, name1 := cm.LowerString(name)
	wasmimport_Get((*uint8)(name0), (uint32)(name1), &result)
	return
}

// Enhance represents the imported function "enhance".
//
//	enhance: func(agent: agent, tools: list<tool>) -> result<_, error>
//
//go:nosplit
func Enhance(agent Agent, tools cm.List[Tool]) (result cm.Result[Error, struct{}, Error]) {
	agent0, agent1, agent2, agent3, agent4, agent5 := lower_Agent(agent)
	tools0, tools1 := cm.LowerList(tools)
	wasmimport_Enhance((*uint8)(agent0), (uint32)(agent1), (*uint8)(agent2), (uint32)(agent3), (*types.Tool)(agent4), (uint32)(agent5), (*Tool)(tools0), (uint32)(tools1), &result)
	return
}
